/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rizqy
 */
public class UangKas extends javax.swing.JFrame {

    private Connection con;
    private Statement stat;
    private ResultSet res;
    private String keterangan;
    private DefaultTableModel dtm;
    /**
     * Creates new form UangKas
     */
  public UangKas() {
        initComponents();
        setTitle("LAPORAN UANGKAS");
        koneksi ();
        kosongkan ();
        tabel ();
        isiNoOtomatis(); // Panggil metode untuk mengisi nomor otomatis
        //rata kiri dan kanan
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation(
           (screenSize.width - frameSize.width) / 3,
           (screenSize.height - frameSize.height) /4);
    }
    
    private void koneksi (){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // Memuat driver JDBC MySQL versi terbaru
            con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/aplikasikelas?useSSL=false&serverTimezone=UTC", "root", ""); // Menghubungkan ke database MySQL pada localhost dengan database 'aplikasikelas', user 'root', tanpa password
            stat = con.createStatement(); // Membuat statement untuk eksekusi query SQL
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e); // Menampilkan pesan dialog jika terjadi kesalahan koneksi atau eksekusi
        }   
    }
    
    private void kosongkan(){
        chika_no.setText("");
        chika_tanggal.setDate(null);
        chika_nama.setText("");
        chika_keterangan.setText("");
        chika_pembayaran.setText("");
        chika_pengeluaran.setText("");
        chika_saldoakhir.setText("");
        pembayaran.setSelected(false);
        pengeluaran.setSelected(false);
        chika_no.requestFocus();
    }
    
    
     private void tabel (){
        DefaultTableModel t= new DefaultTableModel();
        t.addColumn("No");
        t.addColumn("Tanggal");
        t.addColumn("Nama");
        t.addColumn("Pemasukan");
        t.addColumn("Pengeluaran");
        t.addColumn("SaldoAkhir");
        t.addColumn("Keterangan");
        chika_table.setModel(t); 
        try { 
            res= stat.executeQuery("select * from uangkas");
            while (res.next()) {
                t.addRow(new Object[]{ 
                    res.getString("No"),
                    res.getString("Tanggal"),
                    res.getString("Nama"),
                    res.getString("Pemasukan"),
                    res.getString("Pengeluaran"),
                    res.getString("SaldoAkhir"),
                    res.getString("Keterangan")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }    
    }
    
    private void isiNoOtomatis() {
        try {
            res = stat.executeQuery("SELECT MAX(No) FROM uangkas");
            if (res.next()) {
                int no = res.getInt(1);
                chika_no.setText(String.valueOf(no + 1));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chika_keterangan = new javax.swing.JTextField();
        chika_saldoakhir = new javax.swing.JTextField();
        chika_nama = new javax.swing.JTextField();
        chika_tanggal = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pembayaran = new javax.swing.JCheckBox();
        pengeluaran = new javax.swing.JCheckBox();
        chika_lihat = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        chika_no = new javax.swing.JTextField();
        chika_pembayaran = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        chika_pengeluaran = new javax.swing.JTextField();
        chika_search = new javax.swing.JButton();
        chika_clear = new javax.swing.JButton();
        chika_simpan = new javax.swing.JButton();
        chika_edit = new javax.swing.JButton();
        chika_hapus = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        chika_menu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chika_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("TABLE UANGKAS");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Saldo Akhir");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, -1, -1));
        jPanel2.add(chika_keterangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 110, -1));

        chika_saldoakhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_saldoakhirActionPerformed(evt);
            }
        });
        chika_saldoakhir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chika_saldoakhirKeyTyped(evt);
            }
        });
        jPanel2.add(chika_saldoakhir, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 110, -1));
        jPanel2.add(chika_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 110, -1));
        jPanel2.add(chika_tanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 110, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("NO.");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Tanggal");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Nama");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        pembayaran.setForeground(new java.awt.Color(255, 0, 0));
        pembayaran.setText("Pembayaran");
        pembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pembayaranActionPerformed(evt);
            }
        });
        jPanel2.add(pembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        pengeluaran.setForeground(new java.awt.Color(255, 0, 0));
        pengeluaran.setText("Pengeluaran");
        pengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pengeluaranActionPerformed(evt);
            }
        });
        jPanel2.add(pengeluaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        chika_lihat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chika_lihat.setForeground(new java.awt.Color(0, 204, 255));
        chika_lihat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/button-round-arrow-right-icon.png"))); // NOI18N
        chika_lihat.setText("Lihat");
        chika_lihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_lihatActionPerformed(evt);
            }
        });
        jPanel2.add(chika_lihat, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Rp.");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Rp.");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, -1, -1));

        chika_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_noActionPerformed(evt);
            }
        });
        chika_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chika_noKeyTyped(evt);
            }
        });
        jPanel2.add(chika_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 110, -1));

        chika_pembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_pembayaranActionPerformed(evt);
            }
        });
        chika_pembayaran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chika_pembayaranKeyTyped(evt);
            }
        });
        jPanel2.add(chika_pembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 110, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Keterangan");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jTextField6.setText("10000");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 110, -1));

        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("UangKas/2Minggu");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Rp.");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, -1, -1));

        chika_pengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_pengeluaranActionPerformed(evt);
            }
        });
        chika_pengeluaran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chika_pengeluaranKeyTyped(evt);
            }
        });
        jPanel2.add(chika_pengeluaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 110, -1));

        chika_search.setText("SEARCH");
        chika_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_searchActionPerformed(evt);
            }
        });
        jPanel2.add(chika_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 100, 70));

        chika_clear.setText("CLEAR");
        chika_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_clearActionPerformed(evt);
            }
        });
        jPanel2.add(chika_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 100, 70));

        chika_simpan.setText("SIMPAN");
        chika_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_simpanActionPerformed(evt);
            }
        });
        jPanel2.add(chika_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 100, 70));

        chika_edit.setText("EDIT");
        chika_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_editActionPerformed(evt);
            }
        });
        jPanel2.add(chika_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 100, 70));

        chika_hapus.setText("HAPUS");
        chika_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_hapusActionPerformed(evt);
            }
        });
        jPanel2.add(chika_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 100, 70));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 200, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 520, 300));

        chika_menu.setText("MENU");
        chika_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_menuActionPerformed(evt);
            }
        });
        getContentPane().add(chika_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, -1, -1));

        chika_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        chika_table.setShowGrid(false);
        chika_table.setShowHorizontalLines(true);
        chika_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chika_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(chika_table);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 520, 120));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/sekul img.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pembayaranActionPerformed
        // TODO add your handling code here:
          keterangan = "Uang Masuk";
        pengeluaran.setSelected(false);
        chika_keterangan.setText(""+keterangan);
    }//GEN-LAST:event_pembayaranActionPerformed

    private void pengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pengeluaranActionPerformed
        // TODO add your handling code here:
         keterangan = "Uang Keluar";
        pembayaran.setSelected(false);
        chika_keterangan.setText(""+keterangan);
    }//GEN-LAST:event_pengeluaranActionPerformed

    private void chika_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_noActionPerformed
        // TODO add your handling code here:
        try{
            res=stat.executeQuery("select * from uangkas where "+ "No='" + chika_no.getText()
                +"'" ); while (res.next())
                { chika_tanggal.setDate (res.getDate("Tanggal"));
                chika_nama.setText(res.getString("Nama"));
                chika_pembayaran.setText(res.getString("Pemasukan"));
                chika_pengeluaran.setText(res.getString("Pengeluaran"));
                chika_saldoakhir.setText(res.getString("SaldoAkhir"));
                chika_keterangan.setText(res.getString("Keterangan"));
                }    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_chika_noActionPerformed

    private void chika_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_simpanActionPerformed
        // TODO add your handling code here:
      if (chika_no.getText().isEmpty() || chika_tanggal.getDate() == null || chika_nama.getText().isEmpty() ||
        chika_pembayaran.getText().isEmpty() || chika_pengeluaran.getText().isEmpty() || chika_saldoakhir.getText().isEmpty() ||
        chika_keterangan.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Mohon isi semua field sebelum menyimpan data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Validasi untuk memastikan bahwa pemasukan, pengeluaran, dan saldo akhir adalah angka
    try {
        int pemasukan = Integer.parseInt(chika_pembayaran.getText());
        int pengeluaran = Integer.parseInt(chika_pengeluaran.getText());
        int saldoAkhir = Integer.parseInt(chika_saldoakhir.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Pemasukan, Pengeluaran, dan Saldo Akhir harus berupa angka.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String tampilan = "yyyy-MM-dd";
    SimpleDateFormat fm = new SimpleDateFormat(tampilan);
    String Tanggal = String.valueOf(fm.format(chika_tanggal.getDate()));

    try {
        String sql = "INSERT INTO uangkas (No, Tanggal, Nama, Pemasukan, Pengeluaran, SaldoAkhir, Keterangan) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setInt(1, Integer.parseInt(chika_no.getText()));
        pstmt.setString(2, Tanggal);
        pstmt.setString(3, chika_nama.getText());
        pstmt.setInt(4, Integer.parseInt(chika_pembayaran.getText()));
        pstmt.setInt(5, Integer.parseInt(chika_pengeluaran.getText()));
        pstmt.setInt(6, Integer.parseInt(chika_saldoakhir.getText()));
        pstmt.setString(7, chika_keterangan.getText());

        pstmt.executeUpdate();

        kosongkan();
        JOptionPane.showMessageDialog(null, "Berhasil Menyimpan Data");
        new UangKas().setVisible(true);
        dispose();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Menyimpan Data! : " + e.getMessage());
        e.printStackTrace(); // Tampilkan stack trace untuk debugging lebih lanjut
    }
    }//GEN-LAST:event_chika_simpanActionPerformed

    private void chika_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_editActionPerformed
        // TODO add your handling code here:
           if (chika_no.getText().isEmpty() || chika_tanggal.getDate() == null || chika_nama.getText().isEmpty() ||
        chika_pembayaran.getText().isEmpty() || chika_pengeluaran.getText().isEmpty() || chika_saldoakhir.getText().isEmpty() ||
        chika_keterangan.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Mohon isi semua field sebelum mengedit data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int ok = JOptionPane.showConfirmDialog(null, "Apakah yakin ingin mengedit data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (ok == JOptionPane.NO_OPTION) {
        return;
    }

    String tampilan = "yyyy-MM-dd";
    SimpleDateFormat fm = new SimpleDateFormat(tampilan);
    String Tanggal = String.valueOf(fm.format(chika_tanggal.getDate()));

    try {
        // Debugging: tampilkan tanggal yang akan disimpan
        System.out.println("Tanggal yang akan disimpan: " + Tanggal);

        String sql = "UPDATE uangkas SET Tanggal=?, Nama=?, Pemasukan=?, Pengeluaran=?, SaldoAkhir=?, Keterangan=? WHERE No=?";
        PreparedStatement st = con.prepareStatement(sql);
        st.setString(1, Tanggal);
        st.setString(2, chika_nama.getText());
        st.setInt(3, Integer.parseInt(chika_pembayaran.getText()));
        st.setInt(4, Integer.parseInt(chika_pengeluaran.getText()));
        st.setInt(5, Integer.parseInt(chika_saldoakhir.getText()));
        st.setString(6, chika_keterangan.getText());
        st.setString(7, chika_no.getText());
        st.executeUpdate();

        kosongkan();
        JOptionPane.showMessageDialog(null, "Edit Data Sukses");
        new UangKas().setVisible(true);
        dispose();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Edit Data Gagal: " + e.getMessage());
        e.printStackTrace(); // Tampilkan stack trace untuk debugging lebih lanjut
    }
    }//GEN-LAST:event_chika_editActionPerformed

    private void chika_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_clearActionPerformed
        // TODO add your handling code here:
         kosongkan();
    }//GEN-LAST:event_chika_clearActionPerformed

    private void chika_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_hapusActionPerformed
        // TODO add your handling code here:
       if (chika_no.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Mohon isi field No sebelum menghapus data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int ok = JOptionPane.showConfirmDialog(null, "Apakah yakin ingin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (ok == JOptionPane.NO_OPTION) {
        return;
    }

    try {
        String sql = "DELETE FROM uangkas WHERE No = ?";
        PreparedStatement st = con.prepareStatement(sql);
        st.setString(1, chika_no.getText());
        st.executeUpdate();
        kosongkan();
        JOptionPane.showMessageDialog(null, "Delete Data Sukses");
        new UangKas().setVisible(true);
        dispose();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Delete Data Gagal: " + e.getMessage());
    }
        
    }//GEN-LAST:event_chika_hapusActionPerformed

    private void chika_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_searchActionPerformed
        // TODO add your handling code here:
          if (chika_no.getText().trim().isEmpty() && chika_nama.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(rootPane, "Masukkan No atau Nama untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        String searchQuery = chika_no.getText().trim();
        if (searchQuery.isEmpty()) {
            searchQuery = chika_nama.getText().trim();
            res = stat.executeQuery("SELECT * FROM uangkas WHERE Nama='" + searchQuery + "'");
        } else {
            res = stat.executeQuery("SELECT * FROM uangkas WHERE No='" + searchQuery + "'");
        }

        if (res.next()) {
            chika_no.setText(res.getString("No"));
            chika_tanggal.setDate(res.getDate("Tanggal"));
            chika_nama.setText(res.getString("Nama"));
            chika_pembayaran.setText(res.getString("Pemasukan"));
            chika_pengeluaran.setText(res.getString("Pengeluaran"));
            chika_saldoakhir.setText(res.getString("SaldoAkhir"));
            chika_keterangan.setText(res.getString("Keterangan"));
        } else {
            JOptionPane.showMessageDialog(rootPane, "Data tidak ditemukan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, e);
    }
    }//GEN-LAST:event_chika_searchActionPerformed

    private void chika_lihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_lihatActionPerformed
        // TODO add your handling code here:
          new TableMahasiswa().setVisible(true);
        dispose();
    }//GEN-LAST:event_chika_lihatActionPerformed

    private void chika_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_menuActionPerformed
        // TODO add your handling code here:
         new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_chika_menuActionPerformed

    private void chika_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chika_tableMouseClicked
    int selectedRow = chika_table.getSelectedRow();
    if (selectedRow != -1) {
        // Retrieve the actual row index
        int rowIndex = chika_table.convertRowIndexToModel(selectedRow);
        DefaultTableModel model = (DefaultTableModel) chika_table.getModel();
        chika_no.setText(model.getValueAt(rowIndex, 0).toString());
        chika_nama.setText(model.getValueAt(rowIndex, 2).toString());
        chika_pembayaran.setText(model.getValueAt(rowIndex, 3).toString());
        chika_pengeluaran.setText(model.getValueAt(rowIndex, 4).toString());
        chika_saldoakhir.setText(model.getValueAt(rowIndex, 5).toString());
        chika_keterangan.setText(model.getValueAt(rowIndex, 6).toString());
    }
    }//GEN-LAST:event_chika_tableMouseClicked

    private void chika_pembayaranKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chika_pembayaranKeyTyped
        // TODO add your handling code here:
         char chika=evt.getKeyChar();
        if(!(Character.isDigit(chika)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_chika_pembayaranKeyTyped

    private void chika_pengeluaranKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chika_pengeluaranKeyTyped
        // TODO add your handling code here:
          char chika=evt.getKeyChar();
        if(!(Character.isDigit(chika)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_chika_pengeluaranKeyTyped

    private void chika_saldoakhirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chika_saldoakhirKeyTyped
        // TODO add your handling code here:
         char chika = evt.getKeyChar();
        if (!(Character.isDigit(chika))) {
            evt.consume();
        }
    }//GEN-LAST:event_chika_saldoakhirKeyTyped

    private void chika_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chika_noKeyTyped
        // TODO add your handling code here:
        char chika=evt.getKeyChar();
        if(!(Character.isDigit(chika)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_chika_noKeyTyped

    private void chika_saldoakhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_saldoakhirActionPerformed
    
    }//GEN-LAST:event_chika_saldoakhirActionPerformed

    private void chika_pembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_pembayaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chika_pembayaranActionPerformed

    private void chika_pengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_pengeluaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chika_pengeluaranActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
    String searchQuery = jTextField1.getText();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) chika_table.getModel());
    chika_table.setRowSorter(sorter);
    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchQuery));
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UangKas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UangKas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UangKas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UangKas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UangKas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chika_clear;
    private javax.swing.JButton chika_edit;
    private javax.swing.JButton chika_hapus;
    private javax.swing.JTextField chika_keterangan;
    private javax.swing.JButton chika_lihat;
    private javax.swing.JButton chika_menu;
    public javax.swing.JTextField chika_nama;
    private javax.swing.JTextField chika_no;
    private javax.swing.JTextField chika_pembayaran;
    private javax.swing.JTextField chika_pengeluaran;
    private javax.swing.JTextField chika_saldoakhir;
    private javax.swing.JButton chika_search;
    private javax.swing.JButton chika_simpan;
    private javax.swing.JTable chika_table;
    private com.toedter.calendar.JDateChooser chika_tanggal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JCheckBox pembayaran;
    private javax.swing.JCheckBox pengeluaran;
    // End of variables declaration//GEN-END:variables
}
