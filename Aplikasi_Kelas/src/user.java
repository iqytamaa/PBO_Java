/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Rizqy
 */
public class user extends javax.swing.JFrame {
     private Connection con;
    private Statement stat;
    private ResultSet res;
    private String t;
    private DefaultTableModel dtm;

    /**
     * Creates new form user
     */
    public user() {
        initComponents();
        setTitle("USER SETTING");
        koneksi ();
        kosongkan ();
        tabel ();
        //rata kiri dan kanan
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation(
           (screenSize.width - frameSize.width) / 3,
           (screenSize.height - frameSize.height) /4);
    }
    
     private void koneksi (){
     try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/aplikasikelas?useSSL=false&serverTimezone=UTC", "root", "");
         stat=con.createStatement();
         } catch (Exception e) {
           JOptionPane.showMessageDialog(null, e);}   
    }
    
    private void kosongkan(){
     chika_nama.setText("");
     chika_username.setText("");
     chika_password.setText("");
     chika_nama.requestFocus();
    }
    
    private void tabel (){
       DefaultTableModel t = new DefaultTableModel();
    t.addColumn("Nama Lengkap");
    t.addColumn("UserName");
    t.addColumn("Password");
    chika_table.setModel(t);
    try {
        res = stat.executeQuery("SELECT * FROM user");
        while (res.next()) {
            t.addRow(new Object[]{
                res.getString("nama"),
                res.getString("username"),
                res.getString("password")
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, e);
    }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chika_password = new javax.swing.JTextField();
        chika_nama = new javax.swing.JTextField();
        chika_username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chika_edit = new javax.swing.JButton();
        chika_cari = new javax.swing.JButton();
        chika_simpan = new javax.swing.JButton();
        chika_hapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chika_table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        chika_menu = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(chika_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 120, 30));

        chika_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_namaActionPerformed(evt);
            }
        });
        jPanel1.add(chika_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 120, 30));
        jPanel1.add(chika_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 120, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Password");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 110, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Nama Lengkap");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 110, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("UserName");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 110, 30));

        chika_edit.setText("EDIT");
        chika_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_editActionPerformed(evt);
            }
        });
        jPanel1.add(chika_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        chika_cari.setText("CARI");
        chika_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_cariActionPerformed(evt);
            }
        });
        jPanel1.add(chika_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        chika_simpan.setText("SIMPAN");
        chika_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_simpanActionPerformed(evt);
            }
        });
        jPanel1.add(chika_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        chika_hapus.setText("HAPUS");
        chika_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_hapusActionPerformed(evt);
            }
        });
        jPanel1.add(chika_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 430, 210));

        chika_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        chika_table.setShowGrid(true);
        chika_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chika_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(chika_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 470, 130));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 0));
        jLabel5.setText("USER SETTING");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        chika_menu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        chika_menu.setText("MENU");
        chika_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chika_menuActionPerformed(evt);
            }
        });
        getContentPane().add(chika_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/sekul img.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chika_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_editActionPerformed
        // TODO add your handling code here:
           // Memeriksa apakah semua field input telah diisi
    if (chika_nama.getText().isEmpty() || chika_username.getText().isEmpty() || chika_password.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Harap isi semua data terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Konfirmasi pengeditan data
    int ok = JOptionPane.showConfirmDialog(null, "Apakah yakin ingin mengedit data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (ok == JOptionPane.YES_OPTION) {
        try {
            String sql = "UPDATE user SET nama=?, username=?, password=? WHERE nama=?";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, chika_nama.getText());
            st.setString(2, chika_username.getText());
            st.setString(3, chika_password.getText());
            st.setString(4, chika_nama.getText());
            st.executeUpdate();

            kosongkan();
            JOptionPane.showMessageDialog(null, "Edit Data Sukses");
            tabel();  // Refresh tabel setelah mengedit data
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Edit Data Gagal: " + e.getMessage());
        }
    }

    }//GEN-LAST:event_chika_editActionPerformed

    private void chika_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_namaActionPerformed
        // TODO add your handling code here:
         try{
            res=stat.executeQuery("select * from user where "+ "nama='" + chika_nama.getText()
                +"'" ); while (res.next())
                { chika_username.setText(res.getString("username"));
                chika_password.setText(res.getString("password"));
                }    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_chika_namaActionPerformed

    private void chika_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chika_tableMouseClicked
        // TODO add your handling code here:
         int i = chika_table.getSelectedRow();
    if (i == -1) {
        return;
    }
    String nama = (String) chika_table.getValueAt(i, 0);
    String username = (String) chika_table.getValueAt(i, 1);
    String password = (String) chika_table.getValueAt(i, 2);

    chika_nama.setText(nama);
    chika_username.setText(username);
    chika_password.setText(password);
    }//GEN-LAST:event_chika_tableMouseClicked

    private void chika_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_simpanActionPerformed
        // TODO add your handling code here:
         try {
        String sql = "INSERT INTO user (nama, username, password) VALUES (?, ?, ?)";
        PreparedStatement st = con.prepareStatement(sql);
        st.setString(1, chika_nama.getText());
        st.setString(2, chika_username.getText());
        st.setString(3, chika_password.getText());
        st.executeUpdate();
        kosongkan();
        JOptionPane.showMessageDialog(null, "Berhasil Menyimpan Data");
        tabel(); // Refresh the table to reflect the changes
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal Menyimpan Data: " + e);
    }
    }//GEN-LAST:event_chika_simpanActionPerformed

    private void chika_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_hapusActionPerformed
        // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null, "Apakah yakin ingin menghapus data?", "Confirmation",
            JOptionPane.YES_NO_OPTION);
    if (ok == 0) {
        try {
            String sql = "DELETE FROM user WHERE nama=?";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, chika_nama.getText());
            st.executeUpdate();
            kosongkan();
            JOptionPane.showMessageDialog(null, "Delete Data Sukses");
            tabel(); // Refresh the table to reflect the changes
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Delete Data Gagal: " + e);
        }
    }
    }//GEN-LAST:event_chika_hapusActionPerformed

    private void chika_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_cariActionPerformed
        // TODO add your handling code here:
        try {
        String sql = "SELECT * FROM user WHERE nama=?";
        PreparedStatement st = con.prepareStatement(sql);
        st.setString(1, chika_nama.getText());
        res = st.executeQuery();
        if (res.next()) {
            chika_username.setText(res.getString("username"));
            chika_password.setText(res.getString("password"));
        } else {
            JOptionPane.showMessageDialog(null, "User tidak ditemukan");
            kosongkan();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Cari Data Gagal: " + e);
    }
    }//GEN-LAST:event_chika_cariActionPerformed

    private void chika_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chika_menuActionPerformed
        // TODO add your handling code here:
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_chika_menuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new user().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chika_cari;
    private javax.swing.JButton chika_edit;
    private javax.swing.JButton chika_hapus;
    private javax.swing.JButton chika_menu;
    private javax.swing.JTextField chika_nama;
    private javax.swing.JTextField chika_password;
    private javax.swing.JButton chika_simpan;
    private javax.swing.JTable chika_table;
    private javax.swing.JTextField chika_username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private static class chika_username {

        private static void setText(String string) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private static String getText() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public chika_username() {
        }
    }

    private static class User {

        public User() {
        }

        private void setVisible(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }
}
